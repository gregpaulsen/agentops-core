/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/health": {
    /**
     * System Health Check
     * @description Get comprehensive system health status
     */
    get: {
      responses: {
        /** @description System health status */
        200: {
          content: {
            "application/json": {
              /** @example healthy */
              status?: string;
              /** Format: date-time */
              timestamp?: string;
              checks?: {
                environment?: boolean;
                paths?: boolean;
                credentials?: boolean;
                dependencies?: boolean;
              };
            };
          };
        };
      };
    };
  };
  "/config": {
    /**
     * Get Configuration
     * @description Get current tenant configuration
     */
    get: {
      responses: {
        /** @description Configuration data */
        200: {
          content: {
            "application/json": {
              tenant?: string;
              plan?: string;
              storage_provider?: string;
              feature_flags?: Record<string, never>;
              limits?: Record<string, never>;
            };
          };
        };
      };
    };
  };
  "/backups": {
    /**
     * List Backups
     * @description Get backup status and history
     */
    get: {
      responses: {
        /** @description Backup information */
        200: {
          content: {
            "application/json": {
              current_backups?: number;
              archive_files?: number;
              total_size_gb?: number;
              backup_dir?: string;
              archive_dir?: string;
            };
          };
        };
      };
    };
    /**
     * Create Backup
     * @description Trigger manual backup creation
     */
    post: {
      requestBody?: {
        content: {
          "application/json": {
            /** @default false */
            dry_run?: boolean;
          };
        };
      };
      responses: {
        /** @description Backup created successfully */
        200: {
          content: never;
        };
      };
    };
  };
  "/files": {
    /**
     * List Files
     * @description Get file listing and metadata
     */
    get: {
      parameters: {
        query?: {
          /** @description Directory path to list */
          path?: string;
        };
      };
      responses: {
        /** @description File listing */
        200: {
          content: {
            "application/json": {
                name?: string;
                path?: string;
                size?: number;
                /** Format: date-time */
                modified?: string;
                type?: string;
              }[];
          };
        };
      };
    };
    /**
     * Upload File
     * @description Upload file to ingest folder
     */
    post: {
      requestBody?: {
        content: {
          "multipart/form-data": {
            /** Format: binary */
            file?: string;
          };
        };
      };
      responses: {
        /** @description File uploaded successfully */
        200: {
          content: never;
        };
      };
    };
  };
  "/operations": {
    /**
     * List Operations
     * @description Get recent operations log
     */
    get: {
      parameters: {
        query?: {
          /** @description Number of operations to return */
          limit?: number;
        };
      };
      responses: {
        /** @description Operations log */
        200: {
          content: {
            "application/json": {
                id?: string;
                operation?: string;
                status?: string;
                /** Format: date-time */
                timestamp?: string;
                duration?: number;
              }[];
          };
        };
      };
    };
  };
  "/auth/login": {
    /**
     * OAuth Login
     * @description Redirect to OIDC provider for authentication
     */
    get: {
      parameters: {
        query?: {
          /** @description OAuth provider (google, okta, entra, etc.) */
          provider?: string;
        };
      };
      responses: {
        /** @description Redirect to OIDC provider */
        302: {
          content: never;
        };
      };
    };
  };
  "/auth/callback": {
    /**
     * OAuth Callback
     * @description Handle OIDC callback and exchange code for tokens
     */
    get: {
      parameters: {
        query?: {
          /** @description Authorization code from OIDC provider */
          code?: string;
          /** @description State parameter for CSRF protection */
          state?: string;
        };
      };
      responses: {
        /** @description Authentication successful */
        200: {
          content: {
            "application/json": {
              access_token?: string;
              token_type?: string;
              expires_in?: number;
            };
          };
        };
      };
    };
  };
  "/auth/user": {
    /**
     * Get User Info
     * @description Get current user information from JWT token
     */
    get: {
      responses: {
        /** @description User information */
        200: {
          content: {
            "application/json": {
              sub?: string;
              email?: string;
              name?: string;
              roles?: string[];
              groups?: string[];
            };
          };
        };
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    Error: {
      error?: string;
      message?: string;
      status_code?: number;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export type operations = Record<string, never>;
